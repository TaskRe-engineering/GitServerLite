#!/bin/bash

#for debugging
#set -ex

#
# Copyright Â© 2023 Task Re-engineering Inc.
# All rights reserved.
# 
# This source code is licensed under the [] license found in the
# LICENSE file in the root directory of this source tree. 
#

SCRIPT_DIR=$( cd -- "$( dirname -- "${BASH_SOURCE[0]}" )" &> /dev/null && pwd )

source "$SCRIPT_DIR/gsl-eval"
source "$SCRIPT_DIR/gsl-file"
source "$SCRIPT_DIR/gsl-branch"

display_manual() {
    [ "$*" ] && echo "$0: $*"
    sed -n '/^##/,/^$/s/^## \{0,1\}//p' "$0"
}

add_branch() {
    local branch_name="$1"

    if [[ -z "$branch_name" ]];
    then
        exit 1
    fi

    validate_branch_name "$branch_name"
    
    echo "Enter the .env file name: (optional)"
    read -e env_file

    local run_command="create_branch_file "$branch_name" "$env_file""
    _run "$run_command"
}

remove_branch() {
    local branch_name="$1"

    if [[ -z "$branch_name" ]];
    then
        exit 1
    fi

    local file="$GSL_DEPLOY_BRANCHES_DIR/$branch_name"

    if [[ ! -f "$file" ]];
    then
        exit 1
    fi

    local run_command="remove_branch_file "$file""
    _run "$run_command"
}

list() {
    local branches="$1"
    local deploy_branches_dir="$2"

    if [[ ${#branches[@]} == 0 ]];
    then
        echo "There are no deploy branch records configured."
    fi

    for branch_location in "${branches[@]}"
    do
        echo "$(branch "$branch_location" "$deploy_branches_dir")"
    done
}

show_branch() {
    local branch_name="$1"

    if [[ -z "$branch_name" ]];
    then
        exit 1
    fi

    local branch_location="$GSL_DEPLOY_BRANCHES_DIR/$branch_name"

    if [[ ! -f "$branch_location" ]];
    then
        exit 1
    fi

    echo -e "Displaying record for deploy branch $branch_name:"
    echo "==== START ===="
    cat "$branch_location"
    echo -e "===== END =====\n"
}

show_deploy_directory() {
    echo "$GSL_DEPLOY_DIR/"
}

show_version() {
    echo "gitserverlite version $GSL_VERSION"
}

run_selection() {
    command="$1"
    argument1="$2"

    if [[ -z "$command" ]];
    then
        exit 1
    fi

    if [[ "$command" = "help" ]];
    then
        display_manual
    elif [ "$command" = "add-branch" ];
    then
        add_branch $argument1
    elif [ "$command" = "remove-branch" ];
    then
        remove_branch $argument1
    elif [ "$command" = "list" ];
    then
        list "$GSL_BRANCHES" "$GSL_DEPLOY_BRANCHES_DIR"
    elif [ "$command" = "show-branch" ];
    then
        show_branch $argument1
    elif [ "$command" = "show-deploy-location" ];
    then
        show_deploy_directory
    elif [ "$command" = "version" ];
    then
        show_version
    else
        exit 1
    fi
}
